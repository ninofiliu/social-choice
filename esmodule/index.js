!function(r,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["social-choice"]=t():r["social-choice"]=t()}(window,function(){return function(r){var t={};function e(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return r[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}return e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n})},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var o in r)e.d(n,o,function(t){return r[t]}.bind(null,o));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=0)}([function(r,t,e){"use strict";e.r(t);class n{constructor(r){this.r=r,this.n=r.reduce((r,t)=>r+t.nb,0),this.m=r[0].ranks.length,this.nGraph=new Array(this.m).fill(null).map((r,t)=>new Array(this.m).fill(null).map((r,e)=>t==e?null:this.getNXY(t,e))),this.pGraph=new Array(this.m).fill(null).map((r,t)=>new Array(this.m).fill(null).map((r,e)=>t==e?null:this.nGraph[t][e]>this.nGraph[e][t])),this.cw=this.getCW()}getNXY(r,t){let e=0;for(let n of this.r)n.ranks[r]<n.ranks[t]&&(e+=n.nb);return e}getCW(){for(let r=0;r<this.m;r++){let t=!0;for(let e=0;e<this.m;e++)r!=e&&(t=t&&this.pGraph[r][e]);if(t)return r}}}var o=(r,t)=>{const e=new Array(r.m).fill(0);r.r.forEach(({nb:r,ranks:n})=>{n.forEach((n,o)=>{e[o]+=r*t[n]})});const n=Math.max(...e),o=[];return e.forEach((r,t)=>r==n&&o.push(t)),o};var i=r=>{const t=new Array(r.m).fill().map((t,e)=>r.m-e-1);return o(r,t)};var l=r=>{const t=new Array(r.m).fill(0);r.r.forEach(({nb:r,ranks:e})=>{e.forEach((e,n)=>{0==e&&(t[n]+=r)})});const e=Math.max(...t);return t.reduce((r,t,n)=>t==e?[...r,n]:r,[])};e.d(t,"scf",function(){return u}),e.d(t,"Profile",function(){return n});const u={borda:i,plurality:l,scoring:o}}])});
//# sourceMappingURL=index.js.map